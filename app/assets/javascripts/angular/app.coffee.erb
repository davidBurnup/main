<% environment.context_class.instance_eval { include InstrumentPreferencesHelper } %>

@app = angular.module('Burnup', [

  # Angular Deps.
  "templates"
  "angularMoment"
  "ui.bootstrap"
  "infinite-scroll"
  "ngImgCrop"
  "selectize"
  "ngSanitize"
  "wu.masonry"
  "angular-loading-bar"
  "monospaced.elastic"
  "angular-justified-gallery"

  # Models
  "Burnup.models.Notification"
  "Burnup.models.User"
  "Burnup.models.Church"
  "Burnup.models.InstrumentPreference"
  "Burnup.models.Activity"
  "Burnup.models.Comment"
  "Burnup.models.Post"

  # Services
  "Burnup.services.Auth"
  "Burnup.services.SelectizeTemplator"
  "Burnup.services.PushManager"

  # Directives
  "Burnup.directives.notifications"
  "Burnup.directives.buDecoPane"
  "Burnup.directives.buUsersNew"
  "Burnup.directives.buUsersFinalize"
  "Burnup.directives.buBootstrapFile"
  "Burnup.directives.buChurchesShow"
  "Burnup.directives.buInstrumentPreferencesIndex"
  "Burnup.directives.buInstrumentPreferencesShow"
  "Burnup.directives.buInstrumentPreferencesNew"
  "Burnup.directives.buUsersLogin"
  "Burnup.directives.buActivitiesIndex"
  "Burnup.directives.buActivitiesShow"
  "Burnup.directives.buActivitiesNew"
  "Burnup.directives.buUsersSession"

  # Controllers
  "Burnup.controllers.Main"
  "Burnup.controllers.UserTou"
  "Burnup.controllers.UsersLogin"
  "Burnup.controllers.ActivitiesLikersModal"
  "Burnup.controllers.ActivitiesNewModal"
  "Burnup.controllers.UsersAccount"

  # Utils
  "utils.autofocus"
  "utils.Browser"

])


@app.config(($httpProvider, cfpLoadingBarProvider) ->
   $httpProvider.defaults.headers.common['X-CSRF-Token'] = $('meta[name=csrf-token]').attr('content')
   cfpLoadingBarProvider.includeSpinner = false
)

@app.run(($rootScope, amMoment, PushManager) ->
  @App = {}
  App.cable = Cable.createConsumer "wss://<%=Rails.application.secrets.CABLE_HOST%>:<%=Rails.application.secrets.CABLE_PORT%>"
  amMoment.changeLocale('fr')
  $rootScope.instrumentKeys = [<%= instrument_keys_labels.collect(&:to_json).join(",") %>]

  if navigator.serviceWorker
    navigator.serviceWorker.register('/serviceworker.js').then (reg) ->
      console.log '[Companion]', 'Service worker registered!'
      return

  PushManager.initialize()
)


$(document).on 'page:load', ->
  $('[ng-app]').each ->
    module = $(this).attr('ng-app')
    angular.bootstrap(this, [module])
