- usp = @song.user_song_preference(current_user)
= content_for :headers do
  .row
    .col-lg-8.col-md-8.col-sm-8
      #song_title
        = @song.title
      %blockquote.song-info
        - if @song.author.present?
          .song-author
            = @song.author
        - if @song.bpm.present?
          .song-bpm
            = "#{@song.bpm} BPM"
        = "Clé : #{usp.prefered_key}"
        - if usp.prefered_capo.present?
          = " / Capo : #{usp.prefered_capo}"
    #top-buttons.col-lg-4.col-md-4.col-sm-4.text-right.btn-toolbar
      - if policy(@song).edit?
        = link_to edit_song_path(@song), :class => "btn btn-primary btn-sm", :id => "edit_song" do
          %i.glyphicon.glyphicon-edit
          Modifier
      = link_to "#", :class => "btn btn-primary btn-sm link_to_print", :id => "print_song" do
        %i.glyphicon.glyphicon-file
        Fichier PDF

= content_for :right_column do

  = simple_form_for usp, :remote => true do |sp|
    = sp.input :prefered_key, as: :select, :collection => @song.available_keys, :include_blank => false, :hint => "Clé initiale : #{@song.key}", :wrapper_html => {:class => "col-lg-6 col-md-6"}
    = sp.input :prefered_capo, :collection => (0..12).to_a, :include_blank => false, :wrapper_html => { :class => "col-lg-6 col-md-6" }

  .song-info-wrapper.clear
    %blockquote.song-info
      - if @song.author.present?
        .song-author
          = @song.author
      - if @song.bpm.present?
        .song-bpm
          = "#{@song.bpm} BPM"

= content_for :left_column do

  / Nav tabs
  %ul.nav.nav-tabs{:role => "tablist"}
    %li.active{:role => "presentation"}
      %a{"aria-controls" => "lyrics", "data-toggle" => "tab", :href => "#lyrics", :role => "tab", :id => "lyrics-tab"}
        Paroles
    %li{:role => "presentation"}
      %a{"aria-controls" => "social", "data-toggle" => "tab", :href => "#social", :role => "tab", :id => "post-form-tab"}
        Ressources

  / Tab panes
  .tab-content
    #lyrics.tab-pane.active{:role => "tabpanel"}
      #song-container.loading
        = render "song_container", :song => @song

      :coffee
        toLoad = ->
          if $("a#lyrics-tab").parent().hasClass('active')
            load_chords()
          else
            $('ul.nav-tabs > li > a#lyrics-tab').on 'shown.bs.tab', (e) ->
              load_chords()
        auto_load(toLoad)
    #social.tab-pane{:role => "tabpanel"}
      .row
        .col-sm-12
          #post-form
            = render "posts/form", :post => @post, :song => @song, :form_in_tab => true
      .row
        .col-sm-12
          %ul.media-list#feed-activities
            = render_activities(@post_activities)

          #infinite-scrolling
            = will_paginate @post_activities
